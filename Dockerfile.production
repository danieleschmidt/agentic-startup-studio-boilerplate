# Production Dockerfile for Quantum Task Planner
FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create non-root user
RUN groupadd -r quantum && useradd -r -g quantum quantum

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt requirements-dev.txt ./

# Install Python dependencies
RUN pip install --no-cache-dir -r requirements.txt

# Production stage
FROM base as production

# Copy application code
COPY . .

# Create necessary directories
RUN mkdir -p /app/logs /app/data /app/cache && \
    chown -R quantum:quantum /app

# Install the application
RUN pip install -e .

# Set up health check script
COPY scripts/health_check.py /usr/local/bin/health_check.py
RUN chmod +x /usr/local/bin/health_check.py

# Switch to non-root user
USER quantum

# Expose ports
EXPOSE 8000 9090

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD python /usr/local/bin/health_check.py

# Default command
CMD ["python", "-m", "uvicorn", "quantum_task_planner.api.quantum_api:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--workers", "4", \
     "--log-level", "info", \
     "--access-log"]

# Development stage (for multi-stage builds)
FROM base as development

# Install development dependencies
RUN pip install --no-cache-dir -r requirements-dev.txt

# Install pre-commit hooks
RUN pip install pre-commit

# Copy application code
COPY . .

# Install the application in development mode
RUN pip install -e .

# Switch to non-root user
USER quantum

# Development command with auto-reload
CMD ["python", "-m", "uvicorn", "quantum_task_planner.api.quantum_api:app", \
     "--host", "0.0.0.0", \
     "--port", "8000", \
     "--reload", \
     "--log-level", "debug"]
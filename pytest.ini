[tool:pytest]
# Pytest configuration for Agentic Startup Studio Boilerplate

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test execution
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --color=yes
    --cov=.
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    --cov-fail-under=80
    --junitxml=test-results/junit.xml
    --html=test-results/report.html
    --self-contained-html

# Test markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, requires services)
    e2e: End-to-end tests (slowest, full system)
    security: Security tests (vulnerability scanning)
    performance: Performance and load tests
    slow: Tests that take longer than 5 seconds
    api: API endpoint tests
    auth: Authentication and authorization tests
    database: Database-related tests
    redis: Redis-related tests
    external: Tests requiring external services
    smoke: Smoke tests for basic functionality
    regression: Regression tests for bug fixes
    flaky: Tests that may be unstable

# Coverage configuration
# Exclude patterns
norecursedirs = .git .tox build dist *.egg node_modules frontend .devcontainer docs

# Minimum version
minversion = 7.0

# Test timeout (in seconds)
timeout = 300

# Parallel execution
# Uncomment to run tests in parallel (requires pytest-xdist)
# -n auto

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*pkg_resources.*:DeprecationWarning
    ignore:.*imp module.*:DeprecationWarning
    
# Environment variables for tests
env =
    TESTING = true
    ENVIRONMENT = testing
    DATABASE_URL = sqlite:///./test.db
    REDIS_URL = redis://localhost:6379/1
    API_SECRET_KEY = test-secret-key
    JWT_SECRET_KEY = test-jwt-secret
    OPENAI_API_KEY = test-openai-key

# Log configuration
log_level = INFO
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test output formatting
console_output_style = progress

# Test selection shortcuts
# Run with: pytest -m unit (for unit tests only)
# Run with: pytest -m "not slow" (exclude slow tests)
# Run with: pytest -m "unit and not external" (unit tests without external deps)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: quantum-task-planner
  namespace: quantum-system
  labels:
    app: quantum-task-planner
    version: v3.0.0
    component: quantum-core
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: quantum-task-planner
  template:
    metadata:
      labels:
        app: quantum-task-planner
        version: v3.0.0
        component: quantum-core
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: quantum-planner
        image: quantum-task-planner:v3.0.0
        ports:
        - containerPort: 8000
          name: http
          protocol: TCP
        env:
        - name: QUANTUM_ENV
          value: "production"
        - name: QUANTUM_LOG_LEVEL
          value: "INFO"
        - name: QUANTUM_CACHE_SIZE
          value: "10000"
        - name: QUANTUM_MAX_WORKERS
          valueFrom:
            configMapKeyRef:
              name: quantum-config
              key: max_workers
        - name: REDIS_URL
          valueFrom:
            secretKeyRef:
              name: quantum-secrets
              key: redis-url
        resources:
          requests:
            cpu: 200m
            memory: 512Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: quantum-data
          mountPath: /app/data
        - name: quantum-logs
          mountPath: /app/logs
        - name: quantum-config
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: quantum-data
        persistentVolumeClaim:
          claimName: quantum-data-pvc
      - name: quantum-logs
        emptyDir: {}
      - name: quantum-config
        configMap:
          name: quantum-config
      nodeSelector:
        kubernetes.io/arch: amd64
      tolerations:
      - key: "quantum.ai/dedicated"
        operator: "Equal"
        value: "quantum-workers"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - quantum-task-planner
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: Service
metadata:
  name: quantum-task-planner-service
  namespace: quantum-system
  labels:
    app: quantum-task-planner
    component: quantum-core
spec:
  type: ClusterIP
  ports:
  - port: 8000
    targetPort: 8000
    protocol: TCP
    name: http
  selector:
    app: quantum-task-planner

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: quantum-config
  namespace: quantum-system
data:
  max_workers: "8"
  cache_size: "10000"
  log_level: "INFO"
  quantum_coherence_threshold: "0.7"
  scaling_factor: "1.5"
  circuit_breaker_threshold: "5"

---
apiVersion: v1
kind: Secret
metadata:
  name: quantum-secrets
  namespace: quantum-system
type: Opaque
data:
  redis-url: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=  # base64: redis://redis-service:6379

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: quantum-data-pvc
  namespace: quantum-system
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 10Gi
  storageClassName: fast-ssd
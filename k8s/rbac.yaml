apiVersion: v1
kind: ServiceAccount
metadata:
  name: quantum-service-account
  namespace: quantum-tasks
  labels:
    app.kubernetes.io/name: quantum-task-planner
    app.kubernetes.io/component: service-account

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: quantum-role
  namespace: quantum-tasks
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["metrics.k8s.io"]
  resources: ["pods", "nodes"]
  verbs: ["get", "list"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: quantum-role-binding
  namespace: quantum-tasks
subjects:
- kind: ServiceAccount
  name: quantum-service-account
  namespace: quantum-tasks
roleRef:
  kind: Role
  name: quantum-role
  apiGroup: rbac.authorization.k8s.io

---
# Network Policy for secure communication
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: quantum-network-policy
  namespace: quantum-tasks
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: quantum-tasks
    - namespaceSelector:
        matchLabels:
          name: monitoring
  - from: []
    ports:
    - protocol: TCP
      port: 8000  # API port
    - protocol: TCP
      port: 9090  # Metrics port
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          name: quantum-tasks
  - to: []
    ports:
    - protocol: TCP
      port: 53   # DNS
    - protocol: UDP
      port: 53   # DNS
    - protocol: TCP
      port: 443  # HTTPS
    - protocol: TCP
      port: 5432 # PostgreSQL
    - protocol: TCP
      port: 6379 # Redis